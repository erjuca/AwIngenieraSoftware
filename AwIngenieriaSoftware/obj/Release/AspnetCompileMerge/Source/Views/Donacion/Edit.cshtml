@model AwIngenieriaSoftware.Models.RegistroDonacion
@{
    ViewBag.Title = "Editar datos de donación";
}
@using (Html.BeginForm("Edit", "Donacion", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <section class="content-header">
        <h1>
            Donación
            <small>edición</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="/Home/Index"><i class="fa fa-dashboard"></i> Home</a></li>
            <li><a href="/Donacion/Index"> Donaciones</a></li>
            <li class="active">Editar</li>
        </ol>
    </section>
    <section class="content container-fluid">
        <div class="box box-default">
            <div class="box-header with-border">
                <h3 class="box-title"> Editar datos de donación</h3>
            </div>
            <form class="form-horizontal">
                <div class="box-body">
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.Estado)
                    <div class="form-group">
                        @Html.ValidationMessage("CustomError", "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Descripcion, "Descripción")
                        @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Cantidad)
                        @Html.EditorFor(model => model.Cantidad, new { htmlAttributes = new { @class = "form-control", min = 1, max = 9999 } })
                        @Html.ValidationMessageFor(model => model.Cantidad, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UsuarioBeneficiarioId, "Fundación beneficiaria")
                        @Html.DropDownList("UsuarioBeneficiarioId", (SelectList)ViewBag.UsuarioLista, "NINGUNO", htmlAttributes: new { @class = "form -control select2", style = "width: 100%;" })
                        @Html.ValidationMessageFor(model => model.UsuarioBeneficiarioId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.Label("Foto de objeto donado")
                        <input type="file" id="Foto de animal" name="upload" />
                        <p class="help-block">(Tamaño recomendado 50x50px).</p>
                    </div>

                    <main role="main" class="inner cover">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Latitude)
                                    @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Longitude)
                                    @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div id="map_canvas" style="height:200px"></div>
                    </main>
                    <div class="box-footer">
                        <span>
                            <a href="@Url.Action("Index", "Animal")" class="btn btn-sm btn-default" title="Cancelar"> Cancelar </a>
                        </span>
                        <button type="submit" class="btn btn-sm btn-primary pull-right"> Guardar cambios </button>
                    </div>
                </div>
            </form>
        </div>
    </section>
}
@section scripts{
    <!-- DataTables -->
    <script src="~/Content/bower_components/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
    <script src="~/Content/bower_components/select2/dist/js/select2.full.min.js"></script>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCyniWt02VI1DbpEzwYdBOPifJXwGTfO_0"></script>
    <!-- page script -->
    <script>

        $(function () {
            $('.select1').select2();
            $('.select2').select2();

        });

        var vMarker
        var map
        map = new google.maps.Map(document.getElementById('map_canvas'), {
            zoom: 14,
            center: new google.maps.LatLng(-2.897069, -79.004671),
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });

        vMarker = new google.maps.Marker({
            position: new google.maps.LatLng(-2.897069, -79.004671),
            draggable: true
        });
        google.maps.event.addListener(vMarker, 'dragend', function (evt) {
            $("#Latitude").val(evt.latLng.lat().toFixed(6));
            $("#Longitude").val(evt.latLng.lng().toFixed(6));

            map.panTo(evt.latLng);
        });
        map.setCenter(vMarker.position);
        vMarker.setMap(map);

        $("#txtCiudad, #txtEstado, #txtDireccion").change(function () {
            movePin();
        });

        function movePin() {
            var geocoder = new google.maps.Geocoder();
            var textSelectM = $("#txtCiudad").text();
            var textSelectE = $("#txtEstado").val();
            var inputAddress = $("#txtDireccion").val() + ' ' + textSelectM + ' ' + textSelectE;
            console.log(inputAddress);
            geocoder.geocode({
                "address": inputAddress
            }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    vMarker.setPosition(new google.maps.LatLng(results[0].geometry.location.lat(), results[0].geometry.location.lng()));
                    map.panTo(new google.maps.LatLng(results[0].geometry.location.lat(), results[0].geometry.location.lng()));
                    $("#Latitude").val(results[0].geometry.location.lat());
                    $("#Longitude").val(results[0].geometry.location.lng());
                }

            });
        }

    </script>
}
